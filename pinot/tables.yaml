apiVersion: v1
kind: ConfigMap
metadata:
  name: pinot-tables
  namespace: pinot
data:
  userActivity_realtime_table_config.json: |-
    {
      "tableName": "userActivity",
      "tableType": "REALTIME",
      "segmentsConfig": {
        "timeColumnName": "timestamp",
        "replication": "3",
        "retentionTimeUnit": "DAYS",
        "retentionTimeValue": "30"
      },
      "tenants": {},
      "tableIndexConfig": {
        "loadMode": "MMAP"
      },
      "ingestionConfig": {
        "streamIngestionConfig": {
          "streamConfigMaps": [
            {
              "streamType": "kafka",
              "stream.kafka.consumer.type": "lowLevel",
              "stream.kafka.topic.name": "website-events",
              "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.inputformat.json.JSONMessageDecoder",
              "stream.kafka.consumer.factory.class.name": "org.apache.pinot.plugin.stream.kafka20.KafkaConsumerFactory",
              "stream.kafka.broker.list": "kafka:9092",
              "realtime.segment.flush.threshold.time": "3d",
              "realtime.segment.flush.threshold.size": "200M",
              "stream.kafka.consumer.prop.auto.offset.reset": "smallest"
            }
          ]
        },
        "continueOnError": true,
        "rowTimeValueCheck": true,
        "segmentTimeValueCheck": false
      },
      "isDimTable": false
    }

  userActivity_schema.json: |-
    {
    "metricFieldSpecs": [
    ],
    "dimensionFieldSpecs": [
      {
        "dataType": "STRING",
        "name": "event_type"
      },
      {
        "dataType": "INT",
        "name": "user_id"
      }
    ],
    "dateTimeFieldSpecs": [
      {
        "name": "timestamp",
        "dataType": "TIMESTAMP",
        "format": "TIMESTAMP",
        "granularity": "1:DAYS"
      }
    ],
    "complexFieldSpecs": [
      {
        "name": "metadata",
        "dataType": "MAP",
        "fieldType": "COMPLEX",
        "notNull": false,
        "childFieldSpecs": {
          "key": {
            "name": "browser",
            "dataType": "STRING",
            "fieldType": "DIMENSION",
            "notNull": false
          },
          "value": {
            "name": "value",
            "dataType": "STRING",
            "fieldType": "DIMENSION",
            "notNull": false
          },
          "key": {
            "name": "device",
            "dataType": "STRING",
            "fieldType": "DIMENSION",
            "notNull": false
          },
          "value": {
            "name": "value",
            "dataType": "STRING",
            "fieldType": "DIMENSION",
            "notNull": false
          }
        }
      }
    ]
    "schemaName": "userActivity"
    }

---
apiVersion: batch/v1
kind: Job
metadata:
  name: pinot-table-creation
  namespace: pinot
spec:
  template:
    spec:
      containers:
        - name: pinot-add-table-json
          image: apachepinot/pinot:latest
          args: [ "AddTable", "-schemaFile", "/var/pinot/tables/userActivity_schema.json", "-tableConfigFile", "/var/pinot/tables/userActivity_realtime_table_config.json", "-controllerHost", "pinot-controller", "-controllerPort", "9000", "-exec" ]
          env:
            - name: JAVA_OPTS
              value: "-Xms4G -Xmx4G -Dpinot.admin.system.exit=true"
          volumeMounts:
            - name: pinot-tables
              mountPath: /var/pinot/tables
      restartPolicy: OnFailure
      volumes:
        - name: pinot-tables
          configMap:
            name: pinot-tables
  backoffLimit: 100

